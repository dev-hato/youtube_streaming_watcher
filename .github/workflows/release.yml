---
name: release

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  docker-push:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.12.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - run: echo "TAG_NAME=${HEAD_REF//\//-}" >> "$GITHUB_ENV"
        env:
          HEAD_REF: ${{github.head_ref}}
        if: ${{ github.event_name == 'pull_request' }}
      - run: echo 'TAG_NAME=latest' >> "$GITHUB_ENV"
        if: ${{ github.event_name == 'push' }}
      - run: docker-compose build --build-arg BUILDKIT_INLINE_CACHE=1
      - run: docker-compose push

  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-node@v2.5.1
        with:
          node-version-file: .node-version
          cache: npm
      - run: |
          npm install -g npm@7.21.0
          npm install
      - name: Export infra data to source code
        run: npm run export
      - uses: actions/setup-node@v2.5.1
        with:
          node-version-file: src/.node-version
          cache: npm
          cache-dependency-path: src/package-lock.json
      - run: |
          npm install -g npm@7.21.0
          npm install
        working-directory: src
      - name: Build source code
        run: npm run build
        working-directory: src
      - uses: actions/setup-node@v2.5.1
        with:
          node-version-file: .node-version
          cache: npm
      - run: |
          npm install -g npm@7.21.0
          npm install
      - uses: aws-actions/configure-aws-credentials@v1.6.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      - run: npx cdk deploy --require-approval never
