---
name: update-packages

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - closed
  push:
    branches:
      - main

jobs:
  update-packages:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-node@v3.5.1
        with:
          node-version-file: .node-version
          cache: npm
      - name: Get @types/express version
        uses: actions/github-script@v6.3.2
        id: get_types_express_version
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          result-encoding: string
          script: |
            const package = require('./package.json')

            const version = package.dependencies['@types/express'].split('.')
            return [version[0], version[1]].join('.')
      - run: |
          npm_version=$(jq -r '.engines.npm | ltrimstr("^")' package.json)
          npm install --prefer-offline --location=global "npm@${npm_version}"
          npm ci --prefer-offline
      - uses: actions/github-script@v6.3.2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs')
            const yaml = require('js-yaml')

            const config_filename = '.github/dependabot.yml'
            const config = yaml.load(fs.readFileSync(config_filename, 'utf8'))

            for (const update of config.updates) {
              if (update['package-ecosystem'] === 'npm') {
                for (const ignore of update.ignore) {
                  if (ignore['dependency-name'] === 'express') {
                    ignore.versions[0] = '>${{ steps.get_types_express_version.outputs.result }}'
                  }
                }
              }
            }

            try {
              fs.writeFileSync(config_filename, "---\n" + yaml.dump(config), 'utf8')
            } catch (err) {
              console.error(err.message)
              process.exit(1)
            }
      - uses: actions/github-script@v6.3.2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs')

            const renovate = require('./renovate.json')

            for (const rule of renovate.packageRules) {
              if (rule.matchPackageNames.includes('express')) {
                rule.allowedVersions = '<=${{ steps.get_types_express_version.outputs.result }}'
              }
            }

            try {
              fs.writeFileSync('./renovate.json', JSON.stringify(renovate, null, "  ") + "\n", 'utf8')
            } catch (err) {
              console.error(err.message)
              process.exit(1)
            }
      - name: Check needs update
        id: check_needs_update
        run: |
          if [[ "$(jq -r '.dependencies.express' package.json)" =~ '${{ steps.get_types_express_version.outputs.result }}' ]]; then
            echo "needs_update=false" >> "${GITHUB_OUTPUT}"
          else
            echo "needs_update=true" >> "${GITHUB_OUTPUT}"
          fi
      - if: steps.check_needs_update.outputs.needs_update == 'true'
        run: yq -i -o json '.dependencies.express|="~${{ steps.get_types_express_version.outputs.result }}"' package.json
      - if: steps.check_needs_update.outputs.needs_update == 'true'
        run: npm install
      - uses: dev-hato/actions-diff-pr-management@v1.0.5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          branch-name-prefix: update-packages
          pr-title-prefix: expressをアップデートしてあげたよ！
          repo-name: ${{ github.event.pull_request.head.repo.full_name }}
