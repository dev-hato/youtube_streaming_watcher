---
name: update-major-node

on:
  schedule:
    - cron: '0 21 * * *' # 06:00 JST

jobs:
  # AWS Lambdaのランタイムのページをスクレイピングし、そこに記述されているNode.jsランタイムのバージョンがアップデートされていたらDockerイメージをアップデートする
  update-major-node:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3.3.0
        with:
          node-version-file: .node-version
          cache: npm
      - run: |
          npm_version=$(grep \"npm\" package.json \
                        | sed -e 's/ *"npm": "^\(.*\)"/\1/g')
          npm install --prefer-offline --location=global "npm@${npm_version}"
          npm ci --prefer-offline
      - name: Get latest Lambda support version
        id: get_latest_lambda_support_version
        uses: actions/github-script@v6.1.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          result-encoding: string
          script: |
            const axios = require('axios')
            const cheerio = require('cheerio')
            const {Text} = require('domhandler')

            const response = await axios.get('https://docs.aws.amazon.com/ja_jp/lambda/latest/dg/lambda-runtimes.html')
            const $ = cheerio.load(response.data)
            const versions = []

            for (const element of $('table tbody tr:first-child td:first-child p').get()) {
                const textElement = element.children[0]
                if (textElement instanceof Text && textElement.data.startsWith('Node')) {
                    const texts = textElement.data.split(' ')
                    if (1 < texts.length) {
                        versions.push(Number(texts[1]))
                    }
                }
            }

            return Math.max(...versions)
      - run: |
          if grep '^${{steps.get_latest_lambda_support_version.outputs.result}}' .node-version; then
            exit 0
          fi
      - uses: actions/setup-node@v3.3.0
        with:
          node-version: ${{steps.get_latest_lambda_support_version.outputs.result}}
      - run: sed -i -e "s/\(FROM node:\)[0-9.]*\(-.*\)/\1$(node --version | sed -e 's/v//g')\2/g" Dockerfile
      - uses: dev-hato/actions-diff-pr-management@composite_test
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          branch-name-prefix: update-major-node
          pr-title-prefix: nodeをメジャーアップデートしてあげたよ！
          repo-name: dev-hato/youtube_streaming_watcher
