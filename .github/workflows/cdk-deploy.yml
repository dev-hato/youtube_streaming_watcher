---
name: cdk-deploy

on:
  push:
    branches:
      - main

jobs:
  check-cdk-diff:
    runs-on: ubuntu-latest
    outputs:
      deploy-files: ${{ steps.changes.outputs.deploy-files }}
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: dorny/paths-filter@v2.11.1
        id: changes
        with:
          filters: |
            deploy-files:
              - .github/workflows/cdk-deploy.yml
              - bin/cdk.ts
              - lib/**
              - src/**
              - .node-version
              - cdk.json
              - package*.json
              - tsconfig.json
              - .npm*

  cdk-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    needs: check-cdk-diff
    if: needs.check-cdk-diff.outputs.deploy-files == 'true'
    steps:
      - run: |
          ROLE="arn:aws:iam::${{ secrets.AWS_ACCOUNT }}"
          ROLE+=":role/youtube_streaming_watcher_cdk_deploy"
          echo "ROLE=${ROLE}" >> "${GITHUB_ENV}"
          echo "REPOSITORY=${{github.repository}}" >> "${GITHUB_ENV}"
      - uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ env.ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-node@v3.5.1
        with:
          node-version-file: .node-version
          cache: npm
      - run: |
          npm_version=$(jq -r '.engines.npm | ltrimstr("^")' package.json)
          npm install --prefer-offline --location=global "npm@${npm_version}"
          npm ci --prefer-offline
      - run: npx cdk deploy --require-approval never

  cdk-diff-complete:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - check-cdk-diff
      - cdk-deploy
    steps:
      - if: ${{ needs.check-cdk-diff.outputs.deploy-files == 'false' || needs.cdk-deploy.result == 'success' }}
        run: exit 0
      - if: ${{ !(needs.check-cdk-diff.outputs.deploy-files == 'false' || needs.cdk-deploy.result == 'success') }}
        run: exit 1
