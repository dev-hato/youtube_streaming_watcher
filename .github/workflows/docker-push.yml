---
name: docker-push

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - closed
  push:
    branches:
      - main

jobs:
  update-node:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Get @types/node version
        uses: actions/github-script@v6.3.3
        id: get_types_node_version
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          result-encoding: string
          script: |
            const script = require(`${process.env.GITHUB_WORKSPACE}/scripts/docker_push/update_node/get_types_node_version.js`)
            return script()
      - uses: actions/setup-node@v3.5.1
        with:
          node-version: ${{ steps.get_types_node_version.outputs.result }}
      - uses: actions/setup-node@v3.5.1
        with:
          node-version-file: .node-version
          cache: npm
      - run: bash "${GITHUB_WORKSPACE}/scripts/docker_push/update_node/update_docker_version.sh"
      - uses: actions/github-script@v6.3.3
        env:
          PACKAGE_ECOSYSTEM: docker
          MATCH_PACKAGE_NAME: node
          MAX_ALLOWED_VERSION: ${{ steps.get_types_node_version.outputs.result }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const script = require(`${process.env.GITHUB_WORKSPACE}/scripts/update_config.js`)
            script()
      - uses: dev-hato/actions-diff-pr-management@v1.1.1
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          branch-name-prefix: update-node
          pr-title-prefix: nodeをアップデートしてあげたよ！

  docker-push:
    runs-on: ubuntu-latest
    needs: update-node
    env:
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1
      REPOSITORY: ${{github.repository}}
    permissions:
      contents: read
      packages: write
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed' && github.repository == github.event.pull_request.head.repo.full_name)
    steps:
      - uses: actions/checkout@v3.1.0
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.2.1
      # jscpd:ignore-start
      - run: echo "TAG_NAME=${HEAD_REF//\//-}" >> "$GITHUB_ENV"
        env:
          HEAD_REF: ${{github.head_ref}}
        if: ${{ github.event_name == 'pull_request' }}
      # jscpd:ignore-end
      - run: bash "${GITHUB_WORKSPACE}/scripts/docker_push/set_env.sh"
      - name: Build and push (main)
        uses: docker/bake-action@v2.3.0
        env:
          DOCKER_CONTENT_TRUST: 1
        with:
          push: true
          files: docker-compose.yml

  update-version:
    runs-on: ubuntu-latest
    needs: docker-push
    if: always() && (needs.docker-push.result == 'success' || (github.event_name == 'pull_request' && github.event.action == 'closed'))
    permissions:
      contents: write
      pull-requests: write
    env:
      REPOSITORY: ${{github.repository}}
    steps:
      - uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Get Dependabot Node.js version
        if: github.event_name != 'pull_request' || github.event.action != 'closed'
        id: get_dependabot_node_version
        run: bash "${GITHUB_WORKSPACE}/scripts/docker_push/update_version/get_dependabot_node_version.sh"
      - run: echo "TAG_NAME=${HEAD_REF//\//-}" >> "$GITHUB_ENV"
        env:
          HEAD_REF: ${{github.head_ref}}
        if: github.event_name == 'pull_request'
      - run: bash "${GITHUB_WORKSPACE}/scripts/docker_push/set_env.sh"
      - name: Get Node.js version
        id: get_node_version
        if: github.event_name != 'pull_request' || github.event.action != 'closed'
        env:
          DOCKER_CONTENT_TRUST: 1
          DEPENDABOT_NODE_VERSION: ${{steps.get_dependabot_node_version.outputs.node_version}}
          DEPENDABOT_NPM_VERSION: ${{steps.get_dependabot_node_version.outputs.npm_version}}
        run: bash "${GITHUB_WORKSPACE}/scripts/docker_push/update_version/update_versions.sh"
      - uses: actions/setup-node@v3.5.1
        if: github.event_name != 'pull_request' || github.event.action != 'closed'
        with:
          node-version-file: .node-version
          cache: npm
          cache-dependency-path: package-lock.json
      - if: github.event_name != 'pull_request' || github.event.action != 'closed'
        env:
          DEPENDABOT_NPM_VERSION: ${{steps.get_dependabot_node_version.outputs.npm_version}}
        run: bash "${GITHUB_WORKSPACE}/scripts/docker_push/update_version/npm_install.sh"
      - uses: dev-hato/actions-diff-pr-management@v1.1.1
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          branch-name-prefix: fix-version
          pr-title-prefix: nodeをアップデートしてあげたよ！

  update-dockle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: dev-hato/actions-update-dockle@v0.0.36
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}

  dockle:
    runs-on: ubuntu-latest
    needs:
      - update-dockle
      - docker-push
    env:
      DOCKER_CONTENT_TRUST: 1
      REPOSITORY: ${{github.repository}}
    steps:
      - uses: actions/checkout@v3.1.0
      # jscpd:ignore-start
      - run: echo "TAG_NAME=${HEAD_REF//\//-}" >> "$GITHUB_ENV"
        env:
          HEAD_REF: ${{github.head_ref}}
        if: ${{ github.event_name == 'pull_request' }}
      # jscpd:ignore-end
      - run: bash "${GITHUB_WORKSPACE}/scripts/docker_push/dockle/run_dockle.sh"

  docker-push-complete:
    runs-on: ubuntu-latest
    if: always() && (github.event_name != 'pull_request' || github.event.action != 'closed')
    needs:
      - update-version
      - dockle
    steps:
      - if: needs.update-version.result == 'success' && needs.dockle.result == 'success'
        run: exit 0
      - if: ${{ !(needs.update-version.result == 'success' && needs.dockle.result == 'success') }}
        run: exit 1

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true
